# -------------------------
#        WORKFLOWS
#
#  When creating a new workflow, make sure to include condition:
#
#  when:
#    and:
#      - equal: [ false, << pipeline.parameters.run_release_workflow >> ]
#      - equal: [ false, << pipeline.parameters.run_nightly_workflow >> ]
#
#  It's setup this way so we can trigger a release via a POST
#  See limitations: https://support.circleci.com/hc/en-us/articles/360050351292-How-to-trigger-a-workflow-via-CircleCI-API-v2
# -------------------------
workflows:
  tests:
    when:
      and:
        - equal: [ false, << pipeline.parameters.run_release_workflow >> ]
        - equal: [ false, << pipeline.parameters.run_nightly_workflow >> ]
    jobs:
      - prepare_package_for_release:
          name: prepare_package_for_release
          version: ''
          latest : false
          dryrun: true
      - prepare_hermes_workspace
      # - test_ios_rntester_hermes_xcode_integration
      - build_hermesc_linux:
          requires:
            - prepare_hermes_workspace
      - build_hermesc_apple:
          requires:
            - prepare_hermes_workspace
      - build_apple_slices_hermes:
          requires:
            - build_hermesc_apple
          matrix:
            parameters:
              flavor: ["Debug", "Release"]
              slice: ["macosx", "iphoneos", "iphonesimulator", "catalyst"]
      - build_hermes_macos:
          requires:
            - build_apple_slices_hermes
          matrix:
            parameters:
              flavor: ["Debug", "Release"]
      - build_hermesc_windows:
          requires:
            - prepare_hermes_workspace
      - build_npm_package:
          # Build a release package on every untagged commit, but do not publish to npm.
          release_type: "dry-run"
          requires:
            - build_hermesc_linux
            - build_hermes_macos
            - build_hermesc_windows
      - test_js:
          run_disabled_tests: false
      - test_android
      - test_e2e_ios:
          ruby_version: "2.7.7"
      - test_e2e_android
      - test_android_template:
          requires:
            - build_npm_package
          matrix:
            parameters:
              architecture: ["NewArch", "OldArch"]
              jsengine: ["Hermes", "JSC"]
              flavor: ["Debug", "Release"]
      - test_ios_template:
          requires:
            - build_npm_package
          name: "Test Template with Ruby 3.2.0"
          ruby_version: "3.2.0"
          architecture: "NewArch"
          flavor: "Debug"
      - test_ios_template:
          requires:
            - build_npm_package
          matrix:
            parameters:
              architecture: ["NewArch", "OldArch"]
              flavor: ["Debug", "Release"]
              jsengine: ["Hermes", "JSC"]
              flipper: ["WithFlipper", "WithoutFlipper"]
              use_frameworks: ["StaticLibraries", "DynamicFrameworks"]
            exclude:
              - architecture: "NewArch"
                flavor: "Release"
                jsengine: "Hermes"
                flipper: "WithFlipper"
                use_frameworks: "StaticLibraries"
              - architecture: "NewArch"
                flavor: "Release"
                jsengine: "Hermes"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "NewArch"
                flavor: "Release"
                jsengine: "JSC"
                flipper: "WithFlipper"
                use_frameworks: "StaticLibraries"
              - architecture: "NewArch"
                flavor: "Release"
                jsengine: "JSC"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "OldArch"
                flavor: "Release"
                jsengine: "Hermes"
                flipper: "WithFlipper"
                use_frameworks: "StaticLibraries"
              - architecture: "OldArch"
                flavor: "Release"
                jsengine: "Hermes"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "OldArch"
                flavor: "Release"
                jsengine: "JSC"
                flipper: "WithFlipper"
                use_frameworks: "StaticLibraries"
              - architecture: "OldArch"
                flavor: "Release"
                jsengine: "JSC"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "NewArch"
                flavor: "Debug"
                jsengine: "Hermes"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "NewArch"
                flavor: "Debug"
                jsengine: "JSC"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "OldArch"
                flavor: "Debug"
                jsengine: "Hermes"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
              - architecture: "OldArch"
                flavor: "Debug"
                jsengine: "JSC"
                flipper: "WithFlipper"
                use_frameworks: "DynamicFrameworks"
      - test_ios_rntester:
          requires:
            - build_hermes_macos
          name: "Test RNTester with Ruby 3.2.0"
          ruby_version: "3.2.0"
          architecture: "NewArch"
      - test_ios_rntester:
          requires:
            - build_hermes_macos
          matrix:
            parameters:
              architecture: ["NewArch", "OldArch"]
              jsengine: ["Hermes", "JSC"]
              use_frameworks: ["StaticLibraries", "DynamicFrameworks"]
      - test_ios:
          name: "Test iOS with Ruby 3.2.0"
          run_unit_tests: true
          requires:
            - build_hermes_macos
          ruby_version: "3.2.0"
      - test_ios:
          run_unit_tests: true
          requires:
            - build_hermes_macos
          matrix:
            parameters:
              jsengine: ["Hermes", "JSC"]
      - test_js:
          name: test_js_prev_lts
          executor: nodeprevlts
      - test_windows:
          run_disabled_tests: false

  # This workflow should only be triggered by release script
  package_release:
    when: << pipeline.parameters.run_release_workflow >>
    jobs:
      # This job will push a tag that will trigger the publish_release workflow
      - prepare_package_for_release:
          name: prepare_package_for_release
          version: << pipeline.parameters.release_version >>
          latest : << pipeline.parameters.release_latest >>

  # This job will run only when a tag is published due to all the jobs being filtered.
  publish_release:
    jobs:
      - prepare_hermes_workspace:
          filters: *only_release_tags
      - build_hermesc_linux:
          filters: *only_release_tags
          requires:
            - prepare_hermes_workspace
      - build_apple_slices_hermes:
          filters: *only_release_tags
          requires:
            - prepare_hermes_workspace
          matrix:
            parameters:
              flavor: ["Debug", "Release"]
              slice: ["macosx", "iphoneos", "iphonesimulator", "catalyst"]
      - build_hermesc_windows:
          filters: *only_release_tags
          requires:
            - prepare_hermes_workspace
      - build_hermes_macos:
          requires:
            - build_apple_slices_hermes
          matrix:
            parameters:
              flavor: ["Debug", "Release"]
      # This job will trigger when a version tag is pushed (by package_release)
      - build_npm_package:
          name: build_and_publish_npm_package
          release_type: "release"
          filters: *only_release_tags
          requires:
            - build_hermesc_linux
            - build_hermes_macos
            - build_hermesc_windows

  analysis:
    when:
      and:
        - equal: [ false, << pipeline.parameters.run_release_workflow >> ]
        - equal: [ false, << pipeline.parameters.run_nightly_workflow >> ]
    jobs:
      # Run lints on every commit
      - analyze_code

      # Run code checks on PRs
      - analyze_pr

  nightly:
    when: << pipeline.parameters.run_nightly_workflow >>
    jobs:
      - nightly_job
      - prepare_hermes_workspace
      - build_hermesc_linux:
          requires:
            - prepare_hermes_workspace
      - build_apple_slices_hermes:
          requires:
            - prepare_hermes_workspace
          matrix:
            parameters:
              flavor: ["Debug", "Release"]
              slice: ["macosx", "iphoneos", "iphonesimulator", "catalyst"]
      - build_hermesc_windows:
          requires:
            - prepare_hermes_workspace
      - build_hermes_macos:
          requires:
            - build_apple_slices_hermes
          matrix:
            parameters:
              flavor: ["Debug", "Release"]
      - build_npm_package:
          release_type: "nightly"
          requires:
            - build_hermesc_linux
            - build_hermes_macos
            - build_hermesc_windows

  publish_bumped_packages:
    when:
      and:
        - equal: [ false, << pipeline.parameters.run_release_workflow >> ]
        - equal: [ false, << pipeline.parameters.run_nightly_workflow >> ]
    jobs:
      - find_and_publish_bumped_packages:
          <<: *main_or_stable_only
